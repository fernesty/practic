{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _jsxFileName = \"/Users/vm_corp./WebstormProjects/practic/pages/visitlink.js\";\n\nvar Visitlink = function Visitlink(props) {\n  console.log(props);\n\n  var _useQuery = (0, _reactQuery.useQuery)(\"todo\", function _callee() {\n    var response;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(\"http://localhost:46969/api/notifications\", {\n              method: 'POST'\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"Network response was not ok\");\n\n          case 5:\n            return _context.abrupt(\"return\", response.json());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }),\n      data = _useQuery.data;\n\n  return _react.default.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, data);\n};\n\nvar _default = Visitlink;\nexports.default = _default;","map":{"version":3,"names":["Visitlink","props","console","log","useQuery","fetch","method","response","ok","Error","json","data"],"sources":["/Users/vm_corp./WebstormProjects/practic/pages/visitlink.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\n\nconst Visitlink = function(props){\n  console.log(props);\n    const { data } = useQuery(\"todo\", async () => {\n      const response = await fetch(\n        \"http://localhost:46969/api/notifications\", {method:'POST'}\n      );\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    });\n    return(<div>{data}</div>);\n}\n\nexport default Visitlink;\n"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAASC,KAAT,EAAe;EAC/BC,OAAO,CAACC,GAAR,CAAYF,KAAZ;;EACE,gBAAiB,IAAAG,oBAAA,EAAS,MAAT,EAAiB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACTC,KAAK,CAC1B,0CAD0B,EACkB;cAACC,MAAM,EAAC;YAAR,CADlB,CADI;;UAAA;YAC1BC,QAD0B;;YAAA,IAI3BA,QAAQ,CAACC,EAJkB;cAAA;cAAA;YAAA;;YAAA,MAKxB,IAAIC,KAAJ,CAAU,6BAAV,CALwB;;UAAA;YAAA,iCAOzBF,QAAQ,CAACG,IAAT,EAPyB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB,CAAjB;EAAA,IAAQC,IAAR,aAAQA,IAAR;;EASA,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMA,IAAN,CAAP;AACH,CAZD;;eAceX,S"},"metadata":{},"sourceType":"script"}